/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoMySQL;
import tools.Balancete;
import tools.ColorRender;
import tools.ManipulaData;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author luiz.barcellos
 */
public class ImportaBalancete extends javax.swing.JInternalFrame {

    private Balancete bal;
    private final ConexaoMySQL cn;
    private final ManipulaData data = new ManipulaData();
    private final DateFormat dateIn = new SimpleDateFormat("dd/MM/yyyy");
    private final DateFormat dateOut = new SimpleDateFormat("yyyy/MM/dd");
    private final DecimalFormat df = new DecimalFormat("#,##0.00");
    private DefaultTableModel lista;
    private final DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    private final DefaultTableCellRenderer sintetica = new DefaultTableCellRenderer();
    private final DefaultTableCellRenderer analitica = new DefaultTableCellRenderer();
    private String data_inicial;
    private String data_final;
    private int empresa;
    private double ativo;
    private double passivo;
    private double resultado;

    /**
     * Creates new form ImportaBalancete
     * @param conn
     */
    public ImportaBalancete(ConexaoMySQL conn) {
        initComponents();
        this.cn = conn;
        this.bal = new Balancete(conn);
        montaCB();
        montaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/####");
            jTxtCompetencia = new javax.swing.JFormattedTextField(data);
            jLabel1 = new javax.swing.JLabel();
            jButton1 = new javax.swing.JButton();
            jButton2 = new javax.swing.JButton();
            jComboBox1 = new javax.swing.JComboBox<>();
            jCheckBox1 = new javax.swing.JCheckBox();
            jCheckBox2 = new javax.swing.JCheckBox();
            jScrollPane1 = new javax.swing.JScrollPane();
            jTable1 = new javax.swing.JTable();
            jPanel2 = new javax.swing.JPanel();
            jProgressBar1 = new javax.swing.JProgressBar();
            jPanel3 = new javax.swing.JPanel();
            jLabel2 = new javax.swing.JLabel();
            jTxtAtivo = new javax.swing.JTextField();
            jTxtPassivo = new javax.swing.JTextField();
            jLabel3 = new javax.swing.JLabel();
            jTxtResultado = new javax.swing.JTextField();
            jLabel4 = new javax.swing.JLabel();
            jLabel5 = new javax.swing.JLabel();
            jTxtContas = new javax.swing.JTextField();

            setClosable(true);
            setTitle("Importar Balancete");

        }
        catch (Exception e){
        }

        jLabel1.setText("CompetÃªncia");

        jButton1.setText("Importar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox1.setText("Local");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jCheckBox2.setText("Todos os meses");
        jCheckBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1)
                .addComponent(jButton2)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jCheckBox1)
                .addComponent(jCheckBox2))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumo"));

        jLabel2.setText("Ativo");

        jTxtAtivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtAtivo.setEnabled(false);

        jTxtPassivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtPassivo.setEnabled(false);

        jLabel3.setText("Passivo");

        jTxtResultado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtResultado.setEnabled(false);

        jLabel4.setText("Resultado");

        jLabel5.setText("Contas");

        jTxtContas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtContas.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtPassivo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtContas, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jTxtAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTxtPassivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3)
                .addComponent(jTxtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4)
                .addComponent(jLabel5)
                .addComponent(jTxtContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!"  /    ".equals(jTxtCompetencia.getText())) {
            jProgressBar1.setIndeterminate(true);

            if ("Importar".equals(jButton1.getText())) {
                importar();
            }
            pesquisar();

        } else {
            JOptionPane.showMessageDialog(this, "CompetÃªncia nÃ£o informada.", "Resumo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        if (jCheckBox1.isSelected()) {
            jButton1.setText("Pesquisar");
            jCheckBox2.setSelected(false);
            jCheckBox2.setEnabled(false);
        } else {
            jButton1.setText("Importar");
            jCheckBox2.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jCheckBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTxtAtivo;
    private javax.swing.JTextField jTxtCompetencia;
    private javax.swing.JTextField jTxtContas;
    private javax.swing.JTextField jTxtPassivo;
    private javax.swing.JTextField jTxtResultado;
    // End of variables declaration//GEN-END:variables

    private void montaCB() {
        jComboBox1.removeAllItems();

        if (cn.iniciarTransacao()) {
            try {
                cn.executeConsulta("SELECT nome FROM empresa ORDER BY nome;");
                while (cn.rs.next()) {
                    jComboBox1.addItem(cn.rs.getString("nome"));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {
                cn.finalizarTransacao();
            }
        }

    }

    private void defineDatas() {

        if (cn.iniciarTransacao()) {

            try {
                cn.executeConsulta("SELECT iD FROM empresa WHERE nome = '" + jComboBox1.getSelectedItem() + "';");
                while (cn.rs.next()) {
                    empresa = cn.rs.getInt("id");
                }
                System.out.println("Empresa: " + empresa);
                System.out.println("Data Inicial: " + data_inicial);
                System.out.println("Data Final: " + data_final);

                data_inicial = "01/" + jTxtCompetencia.getText();
                data_final = dateIn.format(data.lastDay(jTxtCompetencia.getText()));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            } finally {
                cn.finalizarTransacao();
            }

        }
    }

    private void importar() {

        int meses;

        if (jCheckBox2.isSelected()) {

            meses = 0;

        } else {
            meses = 1;
        }

        defineDatas();
        if (bal.importaBalancete(empresa, data_inicial, data_final) == false) {
            jProgressBar1.setIndeterminate(false);
        }

    }

    private void pesquisar() {

        int linhas = 0;

        montaTabela();
        defineDatas();
        if (cn.iniciarTransacao()) {
            try {
                cn.executeConsulta("SELECT * FROM balancete "
                        + "WHERE data_inicial = '" + dateOut.format(dateIn.parse(data_inicial)) + "' "
                        + "AND data_final = '" + dateOut.format(dateIn.parse(data_final)) + "' "
                        + "AND empresa = '" + empresa + "' "
                        + "ORDER BY class, nomeconta;");
                while (cn.rs.next()) {

                    linhas++;

                    lista.addRow(new String[]{
                        cn.rs.getString("tipo"),
                        cn.rs.getString("conta"),
                        cn.rs.getString("class"),
                        cn.rs.getString("nomeconta"),
                        df.format(cn.rs.getDouble("saldo_ant")),
                        cn.rs.getString("tiposaldoant"),
                        df.format(cn.rs.getDouble("debitos")),
                        df.format(cn.rs.getDouble("creditos")),
                        df.format(cn.rs.getDouble("saldo_atual")),
                        cn.rs.getString("tiposaldo")
                    });

                    if ("1".equals(cn.rs.getString("class"))) {
                        ativo = cn.rs.getDouble("saldo_atual");
                    } else if ("2".equals(cn.rs.getString("class"))) {
                        passivo = cn.rs.getDouble("saldo_atual");
                    } else if ("3".equals(cn.rs.getString("class"))) {
                        if ("C".equals(cn.rs.getString("tiposaldo"))) {
                            resultado = cn.rs.getDouble("saldo_atual");
                        } else {
                            resultado = cn.rs.getDouble("saldo_atual") * -1.00;
                        }
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {
                cn.finalizarTransacao();
            }
        }

        jProgressBar1.setIndeterminate(false);
        jProgressBar1.setValue(100);

        jTxtAtivo.setText(df.format(ativo));
        jTxtPassivo.setText(df.format((passivo + resultado)));
        jTxtResultado.setText(df.format(resultado));
        jTxtContas.setText((linhas + 1) + "");
    }

    private void montaTabela() {

        lista = (DefaultTableModel) jTable1.getModel();

        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Tipo1");
        lista.addColumn("CÃ³digo");
        lista.addColumn("ClassificaÃ§Ã£o");
        lista.addColumn("Conta");
        lista.addColumn("Saldo Anterior");
        lista.addColumn("Tipo");
        lista.addColumn("DÃ©bitos");
        lista.addColumn("CrÃ©ditos");
        lista.addColumn("Saldo Atual");
        lista.addColumn("Tipo");

        //direita.setHorizontalAlignment(SwingConstants.RIGHT);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(50);
        jTable1.getColumnModel().getColumn(1).setMinWidth(50);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(50);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMinWidth(50);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(130);
        jTable1.getColumnModel().getColumn(2).setMinWidth(130);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(130);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMinWidth(130);

        //jTable1.getColumnModel().getColumn(3).setCellRenderer(direita);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(90);
        jTable1.getColumnModel().getColumn(4).setMinWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMinWidth(90);

        //jTable1.getColumnModel().getColumn(5).setCellRenderer(direita);
        jTable1.getColumnModel().getColumn(6).setMaxWidth(90);
        jTable1.getColumnModel().getColumn(6).setMinWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(6).setMaxWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(6).setMinWidth(90);

        //jTable1.getColumnModel().getColumn(6).setCellRenderer(direita);
        jTable1.getColumnModel().getColumn(7).setMaxWidth(90);
        jTable1.getColumnModel().getColumn(7).setMinWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(7).setMaxWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(7).setMinWidth(90);

        //jTable1.getColumnModel().getColumn(7).setCellRenderer(direita);
        jTable1.getColumnModel().getColumn(8).setMaxWidth(90);
        jTable1.getColumnModel().getColumn(8).setMinWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(8).setMaxWidth(90);
        jTable1.getTableHeader().getColumnModel().getColumn(8).setMinWidth(90);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(30);
        jTable1.getColumnModel().getColumn(5).setMinWidth(30);
        jTable1.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(30);
        jTable1.getTableHeader().getColumnModel().getColumn(5).setMinWidth(30);
        jTable1.getColumnModel().getColumn(9).setMaxWidth(30);
        jTable1.getColumnModel().getColumn(9).setMinWidth(30);
        jTable1.getTableHeader().getColumnModel().getColumn(9).setMaxWidth(30);
        jTable1.getTableHeader().getColumnModel().getColumn(9).setMinWidth(30);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);

        jTable1.setDefaultRenderer(Object.class, new ColorRender());

    }
}
