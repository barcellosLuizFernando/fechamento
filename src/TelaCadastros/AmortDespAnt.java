/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoMySQL;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ferna
 */
public class AmortDespAnt extends javax.swing.JInternalFrame {

    private ConexaoMySQL cn;

    private DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

    private DecimalFormat df = new DecimalFormat("#,##0.00");

    private DateFormat dateOut = new SimpleDateFormat("yyyy/MM/dd");
    private DateFormat dateIn = new SimpleDateFormat("dd/MM/yyyy");

    private Double valor_total = 0.00;
    private Double meses = 0.00;
    int var_consulta;

    /**
     * Creates new form AmortDespAnt
     */
    public AmortDespAnt(ConexaoMySQL conn) {
        initComponents();
        this.cn = conn;
        montaTabelaPrazo();
        montaTabelaLancamentos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPesquisar = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jTxtPesquisa_Multi = new javax.swing.JTextField();
        jBtnConfirmar = new javax.swing.JButton();
        jBtnCancelar1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTblConsulta_Multi = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblPrazo = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblLancamentos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTxtIdLancPadrao = new javax.swing.JTextField();
        jTxtId = new javax.swing.JTextField();
        jTxtNomeLancPadrao = new javax.swing.JTextField();
        jBtnLancPadr = new javax.swing.JButton();
        jSpDti = new javax.swing.JSpinner();
        jSpDtf = new javax.swing.JSpinner();
        jBtnPesquisar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTxtPeriodo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jBtnGravar = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JButton();
        jBtnCalcular = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jBtnLancPadr1 = new javax.swing.JButton();

        jPesquisar.setTitle("Pesquisar");
        jPesquisar.setMinimumSize(new java.awt.Dimension(700, 400));

        jTxtPesquisa_Multi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTxtPesquisa_Multi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtPesquisa_MultiKeyReleased(evt);
            }
        });

        jBtnConfirmar.setText("Adicionar");
        jBtnConfirmar.setEnabled(false);
        jBtnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnConfirmarActionPerformed(evt);
            }
        });

        jBtnCancelar1.setText("Cancelar");
        jBtnCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelar1ActionPerformed(evt);
            }
        });

        jTblConsulta_Multi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTblConsulta_Multi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTblConsulta_Multi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblConsulta_MultiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTblConsulta_MultiMouseEntered(evt);
            }
        });
        jScrollPane4.setViewportView(jTblConsulta_Multi);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 453, Short.MAX_VALUE)
                        .addComponent(jBtnCancelar1)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnConfirmar))
                    .addComponent(jTxtPesquisa_Multi)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTxtPesquisa_Multi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnConfirmar)
                    .addComponent(jBtnCancelar1))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPesquisarLayout = new javax.swing.GroupLayout(jPesquisar.getContentPane());
        jPesquisar.getContentPane().setLayout(jPesquisarLayout);
        jPesquisarLayout.setHorizontalGroup(
            jPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPesquisarLayout.setVerticalGroup(
            jPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setTitle("Amortização de Despesas Antecipadas");

        jTblPrazo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTblPrazo);

        jTblLancamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTblLancamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblLancamentosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTblLancamentos);

        jLabel1.setText("Código");

        jLabel2.setText("Lançamento Padrão");

        jLabel3.setText("Início da vigência");

        jLabel4.setText("Fim da vigência");

        jTxtIdLancPadrao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtIdLancPadraoKeyReleased(evt);
            }
        });

        jTxtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtIdKeyReleased(evt);
            }
        });

        jTxtNomeLancPadrao.setEnabled(false);

        jBtnLancPadr.setText("...");
        jBtnLancPadr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLancPadrActionPerformed(evt);
            }
        });

        jSpDti.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1453514400000L), null, null, java.util.Calendar.DAY_OF_MONTH));
        jSpDti.setEditor(new javax.swing.JSpinner.DateEditor(jSpDti, "dd/MM/yyyy"));

        jSpDtf.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1485128927866L), null, null, java.util.Calendar.DAY_OF_MONTH));
        jSpDtf.setEditor(new javax.swing.JSpinner.DateEditor(jSpDtf, "dd/MM/yyyy"));

        jBtnPesquisar.setText("...");
        jBtnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPesquisarActionPerformed(evt);
            }
        });

        jLabel5.setText("Período");

        jTxtPeriodo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtPeriodo.setText("meses");
        jTxtPeriodo.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTxtIdLancPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtNomeLancPadrao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnLancPadr))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpDtf, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpDti, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTxtId, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnPesquisar)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTxtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPesquisar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtIdLancPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtNomeLancPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnLancPadr))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpDti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpDtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtnGravar.setText("Gravar");
        jBtnGravar.setEnabled(false);
        jBtnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGravarActionPerformed(evt);
            }
        });

        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });

        jBtnCalcular.setText("Calcular");
        jBtnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCalcularActionPerformed(evt);
            }
        });

        jButton1.setText("Limpar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jBtnLancPadr1.setText("(X)");
        jBtnLancPadr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLancPadr1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtnLancPadr1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnGravar)
                    .addComponent(jBtnCancelar)
                    .addComponent(jBtnCalcular)
                    .addComponent(jButton1)
                    .addComponent(jBtnLancPadr1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnLancPadrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLancPadrActionPerformed
        var_consulta = 2;

        jPesquisar.setVisible(true);

        try {
            MontaLista();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_jBtnLancPadrActionPerformed

    private void jBtnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPesquisarActionPerformed
        var_consulta = 1;

        jPesquisar.setVisible(true);

        try {
            MontaLista();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_jBtnPesquisarActionPerformed

    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    private void jBtnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCalcularActionPerformed
        int resultado;

        int linha = jTblLancamentos.getSelectedRow();
        //JOptionPane.showMessageDialog(this, linha + "");

        String dti = jSpDti.getValue().toString();
        String dtf = jSpDtf.getValue().toString();

        if (dti.equals(dtf)
                || linha == -1) {
            //JOptionPane.showMessageDialog(this, "Data inicial não pode ser igual a data final. Favor verificar!");
            JOptionPane.showMessageDialog(this, "Revisar datas e selecionar linha.");
            resultado = 1;
        } else {
            resultado = 0;
        }

        if (resultado == 0) {
            montaTabelaPrazo();
            calculaDias();
            calculaParcela();
        }


    }//GEN-LAST:event_jBtnCalcularActionPerformed

    private void jTblLancamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblLancamentosMouseClicked
        String id = jTxtId.getText();

        jTxtId.setEnabled(false);

        if ("".equals(id)) {
            montaTabelaPrazo();
        }

        int linha = jTblLancamentos.getSelectedRow();

        valor_total = Double.parseDouble(jTblLancamentos.getValueAt(linha, 1).toString().replace(".", "").replace(",", "."));
        System.out.println(valor_total);

        jBtnGravar.setEnabled(true);
    }//GEN-LAST:event_jTblLancamentosMouseClicked

    private void jBtnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGravarActionPerformed
        int linhas = jTblPrazo.getRowCount();
        int linha = 0;

        DefaultTableModel lista = (DefaultTableModel) jTblPrazo.getModel();

        String lanc_padrao = jTxtIdLancPadrao.getText();
        Date dti = (Date) jSpDti.getValue();
        Date dtf = (Date) jSpDtf.getValue();

        String parcela;
        Date dataIn = null;
        String data;
        String valor;

        String sql;
        String sql2;

        if (!"".equals(jTxtNomeLancPadrao.getText())
                && linhas > 0) {

            linha = jTblLancamentos.getSelectedRow();
            String id = jTblLancamentos.getValueAt(linha, 0).toString();

            try {
                cn.iniciarTransacao();
                cn.executeAtualizacao("DELETE FROM desp_antecipada_detalhe "
                        + "WHERE id = '" + id + "';");
                cn.executeAtualizacao("DELETE FROM desp_antecipada_provisao "
                        + "WHERE id = '" + id + "';");

                sql = "INSERT into desp_antecipada_provisao (id,id_lanc_padrao,"
                        + "data_inicial,data_final) VALUES ('" + id + "',"
                        + "'" + lanc_padrao + "','" + dateOut.format(dti) + "',"
                        + "'" + dateOut.format(dtf) + "');";
                cn.executeAtualizacao(sql);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao gravar despesa antecipada: " + e);
            }

            jTblPrazo.selectAll();

            for (int x = jTblPrazo.getRowCount(); x != 0; x--) {

                linha = jTblPrazo.getSelectedRow();

                try {
                    dataIn = dateIn.parse(jTblPrazo.getValueAt(linha, 1).toString());
                    parcela = jTblPrazo.getValueAt(linha, 0).toString();
                    data = dateOut.format(dataIn);
                    valor = jTblPrazo.getValueAt(linha, 2).toString().replace(".", "").replace(",", ".");

                    sql2 = "INSERT INTO desp_antecipada_detalhe (id,parcela,data,valor) "
                            + "VALUES ('" + id + "','" + parcela + "','" + data + "','" + valor + "');";

                    cn.executeAtualizacao(sql2);

                    //JOptionPane.showMessageDialog(this, "Linha selecionada: " + linha + ". Data selecionada + " + data);
                    jTblPrazo.removeRowSelectionInterval(linha, linha);

                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(this, "Não foi possível converter a data. Exc: " + ex);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Erro ao gravar no banco de dados: " + e);
                }
            }
            cn.finalizarTransacao();

            limpaCampos();
            montaTabelaLancamentos();
            montaTabelaPrazo();

            jBtnGravar.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Algum dado não foi cadastrado. Confira o assunto e os prazos.");
        }
    }//GEN-LAST:event_jBtnGravarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpaCampos();
        montaTabelaPrazo();
        montaTabelaLancamentos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTxtPesquisa_MultiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtPesquisa_MultiKeyReleased

        try {
            MontaLista();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_jTxtPesquisa_MultiKeyReleased

    private void jBtnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnConfirmarActionPerformed
        try {
            IncluiPesquisa();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        jPesquisar.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jBtnConfirmarActionPerformed

    private void jBtnCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelar1ActionPerformed
        jPesquisar.setVisible(false);        // TODO add your handling code here:
        jPesquisar.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnCancelar1ActionPerformed

    private void jTblConsulta_MultiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblConsulta_MultiMouseClicked
        jBtnConfirmar.setEnabled(true);    // TODO add your handling code here:
    }//GEN-LAST:event_jTblConsulta_MultiMouseClicked

    private void jTblConsulta_MultiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblConsulta_MultiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTblConsulta_MultiMouseEntered

    private void jTxtIdLancPadraoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtIdLancPadraoKeyReleased
        var_consulta = 22;

        jTxtNomeLancPadrao.setText("");

        try {
            IncluiPesquisa();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }//GEN-LAST:event_jTxtIdLancPadraoKeyReleased

    private void jTxtIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtIdKeyReleased
        var_consulta = 11;

        jTxtIdLancPadrao.setText("");
        jTxtNomeLancPadrao.setText("");
        jTxtPeriodo.setText("meses");

        try {
            IncluiPesquisa();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }//GEN-LAST:event_jTxtIdKeyReleased

    private void jBtnLancPadr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLancPadr1ActionPerformed
        int linha = jTblLancamentos.getSelectedRow();

        String id = jTxtId.getText();

        try {
            cn.iniciarTransacao();
            if (!"".equals(id)) {
                cn.executeAtualizacao("DELETE FROM desp_antecipada_detalhe WHERE id = " + id + ";");
                cn.executeAtualizacao("DELETE FROM desp_antecipada_provisao WHERE id = " + id + ";");
            } else {
                id = jTblLancamentos.getValueAt(linha, 0).toString();
                cn.executeAtualizacao("UPDATE desp_antecipada SET status = 1 where id = " + id + ";");
            }
        } catch (Exception e) {
            tools.DefaultMsg.errorMsg(e.getMessage());
        } finally {
            cn.finalizarTransacao();
        }
        limpaCampos();
        montaTabelaLancamentos();
        montaTabelaPrazo();
    }//GEN-LAST:event_jBtnLancPadr1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCalcular;
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnCancelar1;
    private javax.swing.JButton jBtnConfirmar;
    private javax.swing.JButton jBtnGravar;
    private javax.swing.JButton jBtnLancPadr;
    private javax.swing.JButton jBtnLancPadr1;
    private javax.swing.JButton jBtnPesquisar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JFrame jPesquisar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpDtf;
    private javax.swing.JSpinner jSpDti;
    private javax.swing.JTable jTblConsulta_Multi;
    private javax.swing.JTable jTblLancamentos;
    private javax.swing.JTable jTblPrazo;
    private javax.swing.JTextField jTxtId;
    private javax.swing.JTextField jTxtIdLancPadrao;
    private javax.swing.JTextField jTxtNomeLancPadrao;
    private javax.swing.JTextField jTxtPeriodo;
    private javax.swing.JTextField jTxtPesquisa_Multi;
    // End of variables declaration//GEN-END:variables

    private void montaTabelaPrazo() {
        DefaultTableModel lista = (DefaultTableModel) jTblPrazo.getModel();

        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Parcela");
        lista.addColumn("Data");
        lista.addColumn("Valor");

        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        jTblPrazo.getColumnModel().getColumn(0).setMaxWidth(60);
        jTblPrazo.getColumnModel().getColumn(0).setMinWidth(60);
        jTblPrazo.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(60);
        jTblPrazo.getTableHeader().getColumnModel().getColumn(0).setMinWidth(60);
        jTblPrazo.getColumnModel().getColumn(1).setMaxWidth(80);
        jTblPrazo.getColumnModel().getColumn(1).setMinWidth(80);
        jTblPrazo.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(80);
        jTblPrazo.getTableHeader().getColumnModel().getColumn(1).setMinWidth(80);
        jTblPrazo.getColumnModel().getColumn(2).setCellRenderer(direita);

    }

    private void montaTabelaLancamentos() {

        String id = jTxtId.getText();

        DefaultTableModel lista = (DefaultTableModel) jTblLancamentos.getModel();

        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Numero");
        lista.addColumn("Valor");
        lista.addColumn("Complemento");
        lista.addColumn("Data");

        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        jTblLancamentos.getColumnModel().getColumn(0).setMaxWidth(100);
        jTblLancamentos.getColumnModel().getColumn(0).setMinWidth(100);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(100);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(0).setMinWidth(100);
        jTblLancamentos.getColumnModel().getColumn(1).setCellRenderer(direita);
        jTblLancamentos.getColumnModel().getColumn(1).setMaxWidth(100);
        jTblLancamentos.getColumnModel().getColumn(1).setMinWidth(100);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(100);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(1).setMinWidth(100);
        jTblLancamentos.getColumnModel().getColumn(3).setMaxWidth(80);
        jTblLancamentos.getColumnModel().getColumn(3).setMinWidth(80);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(3).setMaxWidth(80);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(3).setMinWidth(80);

        String sql;

        if ("".equals(id)) {
            sql = "SELECT * FROM desp_antecipada "
                    + "WHERE id not in (select id from desp_antecipada_provisao) "
                    + "AND status is null;";
        } else {
            sql = "SELECT * FROM desp_antecipada "
                    + "WHERE id = '" + id + "';";
        }

        cn.iniciarTransacao();
        try {
            cn.executeConsulta(sql);
            while (cn.rs.next()) {

                lista.addRow(new String[]{
                    cn.rs.getString("id"),
                    df.format(cn.rs.getDouble("valor")),
                    cn.rs.getString("complemento"),
                    dateIn.format(cn.rs.getDate("data")),});
            }
        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, "Erro ao consultar o banco de dados: " + ex);
        }
        cn.finalizarTransacao();
    }

    private void calculaDias() {
        Date d1 = null;
        Date d2 = null;
        try {
            d1 = (Date) jSpDti.getValue();
            d2 = (Date) jSpDtf.getValue();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao converter datas: " + e);
        }
        long dt = (d2.getTime() - d1.getTime());
        Double dias = (Double.parseDouble(dt + "") / 86400000.00 / 365.00 * 12.00);
        long dias_final = Math.round(dias);

        meses = Double.parseDouble("" + dias_final);

        jTxtPeriodo.setText(dias_final + " meses");
    }

    private void calculaParcela() {
        DefaultTableModel lista = (DefaultTableModel) jTblPrazo.getModel();

        Double acumulado = 0.00;
        Double valor_inicial = 0.00;
        Double valor_mensal = 0.00;
        Double valor_final = 0.00;
        Double valor = 0.00;
        Date dti = (Date) jSpDti.getValue();
        Date dtf_mensal = null;
        Date dtf = (Date) jSpDtf.getValue();
        Date data = null;
        int primeirodia = 0;
        int dias = 0;
        int parcela = 1;
        int sequencia = 1;

        //CALCULA VALOR MENSAL DA APROPRIAÇÃO
        if (valor_total > 0.00) {

            valor_mensal = (valor_total / meses);

            System.out.println("aqui: " + valor_total);
            //CALCULA PRIMEIRA PROVISAO
            try {
                Calendar data2 = Calendar.getInstance();

                //PRIMEIRO DIA
                data2.setTime(dti);
                primeirodia = data2.get(Calendar.DAY_OF_MONTH);
                dias = data2.get(Calendar.DAY_OF_MONTH);

                //ULTIMA DATA
                int ultimo_dia = 0;
                Date ultima_data = null;

                try {
                    data2.setTime(dti);

                    data2.set(Calendar.DAY_OF_MONTH, 1);
                    data2.set(Calendar.MONTH, data2.get(Calendar.MONTH) + 1);
                    data2.set(Calendar.DAY_OF_MONTH, 0);

                    ultima_data = data2.getTime();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }

                //ULTIMO DIA
                data2.setTime(ultima_data);
                ultimo_dia = data2.get(Calendar.DAY_OF_MONTH);

                valor_inicial = valor_mensal / 30.00 * Double.parseDouble((ultimo_dia - dias + 1) + "");
                //JOptionPane.showMessageDialog(this, "valor inicial é "+valor_inicial);

            } catch (HeadlessException ex) {
                JOptionPane.showMessageDialog(this, ex);

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }

            //INCLUI VALORES NA TABELA
            try {
                for (Double x = meses; x != 0.00; x--) {

                    //AJUSTA DATAS, EXCETO A ÚLTIMA
                    try {
                        Calendar data2 = Calendar.getInstance();

                        data2.setTime(dti);

                        data2.set(Calendar.DAY_OF_MONTH, 1);
                        data2.set(Calendar.MONTH, data2.get(Calendar.MONTH) + sequencia);
                        data2.set(Calendar.DAY_OF_MONTH, 0);
                        dias = data2.get(Calendar.DAY_OF_MONTH);

                        dtf_mensal = data2.getTime();
                        //JOptionPane.showMessageDialog(null, "Data de Saída " + dtf_mensal);

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex);
                    }

                    //DEFINE QUAL O VALOR QUE SERÁ ADOTADO
                    if (parcela == 1
                            && primeirodia > 1) {
                        valor = valor_inicial;
                    } else {
                        valor = valor_mensal;
                    }

                    if (valor > -1) {
                        lista.addRow(new String[]{
                            parcela + "",
                            dateIn.format(dtf_mensal) + "",
                            df.format(valor)});
                        /*JOptionPane.showMessageDialog(null, "Valor mensal é " + valor_mensal
                            + ", data final ajustada é " + dateIn.format(dtf_mensal)
                            + ", os dias são " + dias);*/

                        parcela++;
                    }
                    sequencia++;
                    acumulado += valor;
                }

                //CALCULA ULTIMA PROVISAO
                valor_final = valor_total - acumulado;

                if (valor_final > 0.00) {
                    lista.addRow(new String[]{
                        parcela + "",
                        dateIn.format(dtf) + "",
                        df.format(valor_final)});
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um lançamento para continuar.");
        }
    }

    private void MontaLista() throws Exception {
        DefaultTableModel lista = (DefaultTableModel) jTblConsulta_Multi.getModel();

        lista.setColumnCount(0);
        lista.setRowCount(0);

        String sql;
        String pesquisa = jTxtPesquisa_Multi.getText();

        switch (var_consulta) {

            case 1:
                lista.addColumn("Numero");
                lista.addColumn("Complemento");

                jTblConsulta_Multi.getColumnModel().getColumn(0).setMaxWidth(100);
                jTblConsulta_Multi.getColumnModel().getColumn(0).setMinWidth(100);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(100);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMinWidth(100);

                if ("".equals(pesquisa)) {
                    sql = "SELECT * FROM desp_antecipada_provisao b "
                            + "LEFT JOIN desp_antecipada a on (a.id = b.id) "
                            + "order by a.complemento;";
                } else {
                    sql = "SELECT * FROM desp_antecipada_provisao b "
                            + "LEFT JOIN desp_antecipada a on (a.id = b.id) "
                            + "WHERE UPPER(a.complemento)  "
                            + "LIKE '%" + pesquisa.toUpperCase() + "%' "
                            + "order by a.complemento;";
                }

                cn.iniciarTransacao();

                try {
                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        lista.addRow(new String[]{
                            cn.rs.getString("id"),
                            cn.rs.getString("complemento")});
                    }
                } catch (Exception e) {
                    throw new RuntimeException("Erro ao pesquisar e preencher tabela: " + e);
                }

                cn.finalizarTransacao();

                break;

            case 2:
                lista.addColumn("Id");
                lista.addColumn("Descrição");

                jTblConsulta_Multi.getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(0).setMinWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMinWidth(60);

                if ("".equals(pesquisa)) {
                    sql = "SELECT * FROM lanc_padrao order by descricao;";
                } else {
                    sql = "SELECT * FROM lanc_padrao WHERE UPPER(descricao)  "
                            + "LIKE '%" + pesquisa.toUpperCase() + "%' "
                            + "order by descricao;";
                }

                cn.iniciarTransacao();

                try {
                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        lista.addRow(new String[]{
                            cn.rs.getString("id"),
                            cn.rs.getString("descricao")});
                    }
                } catch (Exception e) {
                    throw new RuntimeException("Erro ao pesquisar e preencher tabela: " + e);
                }

                cn.finalizarTransacao();
                break;
        }

    }

    private void IncluiPesquisa() throws Exception {
        int linha = jTblConsulta_Multi.getSelectedRow();

        String sql;
        String id = null;
        String id_lanc_padr;

        switch (var_consulta) {
            case 1:
                jTxtId.setText(jTblConsulta_Multi.getValueAt(linha, 0).toString());

            case 11:
                id = jTxtId.getText();
                sql = "SELECT * FROM desp_antecipada_provisao "
                        + "WHERE id = '" + id + "';";
                cn.iniciarTransacao();

                try {
                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        jTxtIdLancPadrao.setText(cn.rs.getString("id_lanc_padrao"));
                        jSpDti.setValue(cn.rs.getDate("data_inicial"));
                        jSpDtf.setValue(cn.rs.getDate("data_final"));
                    }

                } catch (Exception e) {
                    throw new RuntimeException("Erro ao consultar dados do lançamento: " + e);
                }
                cn.finalizarTransacao();

            case 111:
                montaTabelaPrazo();
                DefaultTableModel lista = (DefaultTableModel) jTblPrazo.getModel();

                sql = "SELECT * FROM desp_antecipada_detalhe "
                        + "WHERE id = '" + id + "';";

                try {
                    cn.iniciarTransacao();
                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        lista.addRow(new String[]{
                            cn.rs.getString(2),
                            dateIn.format(cn.rs.getDate(3)),
                            cn.rs.getString(4).replace(".", ",")});
                    }
                } catch (Exception ex) {
                    throw new RuntimeException("Erro ao preencher tabela de prazos: " + ex);
                }
                cn.finalizarTransacao();

                var_consulta = 22;
                IncluiPesquisa();
                montaTabelaLancamentos();
                //jTblLancamentos.setRowSelectionInterval(0, 0);

                break;

            case 2:
                jTxtIdLancPadrao.setText(jTblConsulta_Multi.getValueAt(linha, 0).toString());

            case 22:
                id = jTxtIdLancPadrao.getText();
                sql = "SELECT * FROM lanc_padrao "
                        + "WHERE id = '" + id + "' ;";

                cn.iniciarTransacao();
                try {
                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        jTxtNomeLancPadrao.setText(cn.rs.getString("descricao"));
                    }
                } catch (Exception ex) {
                    throw new RuntimeException("Erro ao consultar lançamento padrão: " + ex);
                }
                cn.finalizarTransacao();
                break;

        }
    }

    private void limpaCampos() {
        jTxtId.setEnabled(true);

        jTxtId.setText("");
        jTxtIdLancPadrao.setText("");
        jTxtNomeLancPadrao.setText("");
        jTxtPeriodo.setText("meses");
    }
}
