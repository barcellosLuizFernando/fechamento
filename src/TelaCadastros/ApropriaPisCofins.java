/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoFB;
import conn.ConexaoMySQL;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import tools.FbGenerators;
import view.TelaPrincipal;

/**
 *
 * @author ferna
 */
public class ApropriaPisCofins extends javax.swing.JInternalFrame {

    private int lancamento_atual;

    private int lancamentos_jpb;

    private ConexaoFB cnfb = new ConexaoFB();

    private ConexaoMySQL cn;

    private final DecimalFormat df = new DecimalFormat("#,##0.00");

    private final DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

    private final DateFormat dateOut = new SimpleDateFormat("yyyy/MM/dd");
    private final DateFormat dateIn = new SimpleDateFormat("dd/MM/yyyy");

    private Date dti;
    private Date dtf;
    private int tipo_consulta;
    private int var_update;
    private String sql;

    /**
     * Creates new form ApropriaPisCofins
     */
    public ApropriaPisCofins(ConexaoMySQL conn) {
        initComponents();
        this.cn = conn;
        montaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jBtnPesquisar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTxtValor = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jBtnGravar = new javax.swing.JButton();
        jpb = new javax.swing.JProgressBar();
        jBtnGravar1 = new javax.swing.JButton();

        jLabel1.setText("Competência");

        jSpinner1.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1485880920000L), null, null, java.util.Calendar.MONTH));
        jSpinner1.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner1, "MMMM/yyyy"));

        jBtnPesquisar.setText("Importar");
        jBtnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPesquisarActionPerformed(evt);
            }
        });

        jLabel2.setText("Crédito");

        jTxtValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtValor.setEnabled(false);

        jCheckBox1.setText("Lançamentos Importados");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTxtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnPesquisar)
                        .addComponent(jCheckBox1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton4.setText("Limpar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jBtnGravar.setText("Lançar");
        jBtnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGravarActionPerformed(evt);
            }
        });

        jBtnGravar1.setText("Lançar2");
        jBtnGravar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGravar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnGravar1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnGravar)
                        .addComponent(jButton2)
                        .addComponent(jButton4)
                        .addComponent(jBtnGravar1))
                    .addComponent(jpb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPesquisarActionPerformed
        montaTabela();

        ajustaDatas();

        var_update = 0;

        if (jCheckBox1.isSelected()) {
            tipo_consulta = 2;
        } else {
            tipo_consulta = 1;
        }

        incluiPesquisa();

    }//GEN-LAST:event_jBtnPesquisarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        montaTabela();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBtnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGravarActionPerformed
        String update = jBtnGravar.getText();

        if ("Lançar".equals(update)) {
            var_update = 1;
        } else {
            var_update = 2;
        }

        tipo_consulta = 2;

        incluiPesquisa();
    }//GEN-LAST:event_jBtnGravarActionPerformed

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        if (jCheckBox1.isSelected()) {
            jBtnPesquisar.setText("Mostrar");
        } else {
            jBtnPesquisar.setText("Importar");
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jBtnGravar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGravar1ActionPerformed
ajustaDatas();

        String empresa = "1";
        String tipo;
        String imposto;
        int numero;
        String bc;
        String debito;
        String estab_debito;
        String credito;
        String estab_credito;
        String valor_lcto;
        String historico;
        String complemento;
        String id;
        int transacoes;

        Double valor = 0.00;
            TelaPrincipal tela = new TelaPrincipal();
            ConexaoMySQL cn2 = tela.cn;
        

        try {
        tools.FbGenerators gen = new FbGenerators();
            
        
            sql = "SELECT * FROM rel_pis_cofins "
                        + "WHERE competencia BETWEEN '" + dateOut.format(dti) + "' "
                        + "AND '" + dateOut.format(dtf) + "' ;";
            
            cn.executeConsulta(sql);
            
            cnfb.conecta();
            while (cn.rs.next()) {
                tipo = cn.rs.getString("tipo");
                imposto = cn.rs.getString("imposto");
                //numero = cn.rs.getInt("numero_lcto");
                bc = cn.rs.getString("base_de_calculo");
                debito = cn.rs.getString("debito");
                estab_debito = cn.rs.getString("estab_debito");
                credito = cn.rs.getString("credito");
                estab_credito = cn.rs.getString("estab_credito");
                valor_lcto = cn.rs.getString("valor");
                historico = cn.rs.getString("historico");
                complemento = cn.rs.getString("complemento");
                id = cn.rs.getString("id_bc");

                valor += cn.rs.getDouble("valor");

                //PESQUISA NÚMERO DO LANÇAMENTO NO FIREBIRD
                
                    numero = gen.getCodigo("ctb_lancamentos");

                //PESQUISA NÚMERO DA TRANSAÇÃO NO FIREBIRD
                
                    transacoes = gen.getTransacao();
                

                sql = "INSERT INTO ctb_lancamentos (empresa,numero,debito,"
                        + "credito,historico,estab_debito,estab_credito,"
                        + "data,valor,complemento,usu_inc,data_inc,"
                        + "hora_inc,id_transacao,origem,estabelec_cad) "
                        + "VALUES ('" + empresa + "','" + numero + "',"
                        + "'" + debito + "','" + credito + "','" + historico + "',"
                        + "'" + estab_debito + "','" + estab_credito + "',"
                        + "'" + dateIn.format(dtf).replace("/", ".") + "',"
                        + "'" + valor_lcto + "','" + complemento + "',"
                        + "167,current_date,current_time,'" + transacoes + "',"
                        + "'CTB',1);";
                cnfb.executeAtualizacao(sql);

                sql = "INSERT INTO pis_cofins_lancamentos (id,id_bc,"
                        + "competencia,data) VALUES ('" + numero + "',"
                        + "'" + id + "','" + dateOut.format(dtf) + "',"
                        + "current_date());";
                cn2.executeAtualizacao(sql);

                //JOptionPane.showMessageDialog(null, "Lançamentos efetuados com sucesso.");
            }
        } catch (Exception e) {
            tools.DefaultMsg.errorMsg(e + "");
        } finally {
            cnfb.desconecta();
            try{
            cn2.desconecta();
            } catch (Exception e){
                
            }
            tela.dispose();
        }

    }//GEN-LAST:event_jBtnGravar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnGravar;
    private javax.swing.JButton jBtnGravar1;
    private javax.swing.JButton jBtnPesquisar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTxtValor;
    private javax.swing.JProgressBar jpb;
    // End of variables declaration//GEN-END:variables

    private void preencheBarra() {
        new Thread() {
            public void run() {
                //recebe dados
                jpb.setMinimum(0);
                jpb.setMaximum(lancamentos_jpb);

                jpb.setValue(lancamento_atual);

                jpb.setToolTipText((lancamento_atual + "/" + lancamentos_jpb));

            }
        }.start();
    }

    private void montaTabela() {
        jBtnPesquisar.setEnabled(true);

        DefaultTableModel lista = (DefaultTableModel) jTable1.getModel();

        jBtnGravar.setEnabled(false);

        //jCheckBox1.setSelected(false);
        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Tipo");
        lista.addColumn("Imposto");
        lista.addColumn("Valor");
        lista.addColumn("Complemento");

        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(150);
        jTable1.getColumnModel().getColumn(0).setMinWidth(150);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(150);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(150);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(1).setMinWidth(100);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(100);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMinWidth(100);
        //jTable1.getColumnModel().getColumn(1).setCellRenderer(direita);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(2).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMinWidth(80);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(direita);

        jpb.setValue(0);
        jTxtValor.setText("0.00");
    }

    private void ajustaDatas() {
        Date competencia = (Date) jSpinner1.getValue();

        Calendar data2 = Calendar.getInstance();

        //PRIMEIRO DIA
        data2.setTime(competencia);
        data2.set(Calendar.DAY_OF_MONTH, 1);

        dti = data2.getTime();

        //ULTIMO DIA
        data2.set(Calendar.MONTH, data2.get(Calendar.MONTH) + 1);
        data2.set(Calendar.DAY_OF_MONTH, 0);

        dtf = data2.getTime();
    }

    private void incluiPesquisa() {

        int linhas;

        int lcto_efetuados = 0;

        lancamento_atual = 0;

        String empresa = "1";
        String tipo;
        String imposto;
        String numero;
        String bc;
        String debito;
        String estab_debito;
        String credito;
        String estab_credito;
        String valor_lcto;
        String historico;
        String complemento;
        String id;
        String transacoes = null;

        Double valor = 0.00;

        DefaultTableModel lista = (DefaultTableModel) jTable1.getModel();

        String sql;

        cn.iniciarTransacao();
        cnfb.conecta();

        switch (tipo_consulta) {

            case 1:
                sql = "Select 'ESTORNO PIS / COFINS' as TIPO, "
                        + "case a.credito when '1561' then 'PIS' else 'COFINS' end as IMPOSTO, "
                        + "'0' AS NUMERO, "
                        + "sum(a.valor) as BASE_DE_CALCULO, "
                        + "a.credito as DEBITO, "
                        + "a.estab_debito, "
                        + "a.debito as CREDITO, "
                        + "A.estab_credito, "
                        + "round(sum(a.valor),2) as valor, "
                        + "case a.credito when '1561' then (case left(b.classificacao,3) "
                        + "when '3.1' then '876' else '878' end) else (case left(b.classificacao,3) "
                        + "when '3.1' then '877' else '879' end) end as historico, "
                        + "'Valor ref. estorno de '||b.nome as COMPLEMENTO "
                        + "from cad_planocontas b "
                        + "inner join ctb_lancamentos a on (b.empresa = a.empresa and b.codigo = a.debito and left(b.classificacao,3) = '3.1') "
                        + "where b.empresa = 1 and a.credito in (1561,1560)  "
                        + "and a.data between '" + dateIn.format(dti).replace("/", ".") + "' and '" + dateIn.format(dtf).replace("/", ".") + "' "
                        + "group by 1,2,3,5,6,7,8,10,11 "
                        + "union all "
                        + "select 'DEPRECIAÇÃO' as TIPO, "
                        + "'PIS' as IMPOSTO, "
                        + "a.numero, "
                        + "a.valor as BASE_DE_CALCULO, "
                        + "CASE A.credito WHEN '1414' THEN '36494' ELSE '36493' END AS DEBITO, "
                        + "A.estab_debito, "
                        + "a.debito as CREDITO, "
                        + "a.estab_credito, "
                        + "round(case a.credito when '1414' then (a.valor*1.65/100) else "
                        + "case a.estab_debito when '1' then 0 else (a.valor*1.65/100) end end,2) as VALOR, "
                        + "'874' as HISTORICO, "
                        + "'Valor ref. Crédito de PIS sobre '||b.nome as COMPLEMENTO "
                        + "from cad_planocontas b "
                        + "inner join ctb_lancamentos a on (b.empresa = a.empresa and b.codigo = a.credito and a.debito in (6177) and a.credito in (1414,1415) "
                        + "and a.data between '" + dateIn.format(dti).replace("/", ".") + "' and '" + dateIn.format(dtf).replace("/", ".") + "') "
                        + "where b.empresa = 1  "
                        + "union all "
                        + "select 'DEPRECIAÇÃO' as TIPO, "
                        + "'COFINS' as IMPOSTO, "
                        + "a.numero, "
                        + "a.valor as BASE_DE_CALCULO, "
                        + "CASE A.credito WHEN '1414' THEN '36499' ELSE '36498' END AS DEBITO, "
                        + "A.estab_debito, "
                        + "a.debito as CREDITO, "
                        + "a.estab_credito, "
                        + "round(case a.credito when '1414' then (a.valor*7.6/100) else "
                        + "case a.estab_debito when '1' then 0 else(a.valor*7.6/100) end end,2) as VALOR, "
                        + "'875' as HISTORICO, "
                        + "'Valor ref. Crédito de COFINS sobre '||b.nome as COMPLEMENTO "
                        + "from cad_planocontas b "
                        + "inner join ctb_lancamentos a on (b.empresa = a.empresa and b.codigo = a.credito and a.debito in (6177) and a.credito in (1414,1415) "
                        + "and a.data between '" + dateIn.format(dti).replace("/", ".") + "' and '" + dateIn.format(dtf).replace("/", ".") + "') "
                        + "where b.empresa = 1 ";
                try {
                    cn.executeAtualizacao("DELETE FROM pis_cofins "
                            + "WHERE competencia = '" + dateOut.format(dtf) + "';");

                    cnfb.executeConsulta(sql);
                    while (cnfb.rs.next()) {
                        tipo = cnfb.rs.getString("tipo");
                        imposto = cnfb.rs.getString("imposto");
                        numero = cnfb.rs.getString("numero");
                        bc = cnfb.rs.getString("base_de_calculo");
                        debito = cnfb.rs.getString("debito");
                        estab_debito = cnfb.rs.getString("estab_debito");
                        credito = cnfb.rs.getString("credito");
                        estab_credito = cnfb.rs.getString("estab_credito");
                        valor_lcto = cnfb.rs.getString("valor");
                        historico = cnfb.rs.getString("historico");
                        complemento = cnfb.rs.getString("complemento");

                        sql = "INSERT INTO pis_cofins (tipo,imposto,numero,"
                                + "base_de_calculo,debito,estab_debito,credito,"
                                + "estab_credito,valor,historico,complemento,"
                                + "competencia) VALUES ('" + tipo + "','" + imposto + "',"
                                + "'" + numero + "','" + bc + "','" + debito + "',"
                                + "'" + estab_debito + "','" + credito + "',"
                                + "'" + estab_credito + "','" + valor_lcto + "',"
                                + "'" + historico + "','" + complemento + "',"
                                + "'" + dateOut.format(dtf) + "');";
                        cn.executeAtualizacao(sql);
                    }

                    JOptionPane.showMessageDialog(this, "Provisões importadas com sucesso.");

                } catch (Exception ex) {

                    ConexaoFB.resultadoUpd = 1;
                    ConexaoMySQL.resultadoUpd = 1;

                    JOptionPane.showMessageDialog(null, ex);
                }

            case 2:

                montaTabela();

                sql = "SELECT count(id_bc) FROM rel_pis_cofins "
                        + "WHERE competencia BETWEEN '" + dateOut.format(dti) + "' "
                        + "AND '" + dateOut.format(dtf) + "' "
                        //+ "AND tipo != 'DEPRECIAÇÃO' "
                        + "AND numero_lcto IS NOT NULL;";

                try {
                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        lcto_efetuados = cn.rs.getInt(1);
                    }
                    cn.rs.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }

                sql = "SELECT * FROM rel_pis_cofins "
                        + "WHERE competencia BETWEEN '" + dateOut.format(dti) + "' "
                        + "AND '" + dateOut.format(dtf) + "' ;";
                //+ "AND tipo != 'DEPRECIAÇÃO' ;";
                //JOptionPane.showMessageDialog(this, sql);

                try {
                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        tipo = cn.rs.getString("tipo");
                        imposto = cn.rs.getString("imposto");
                        numero = cn.rs.getString("numero_lcto");
                        bc = cn.rs.getString("base_de_calculo");
                        debito = cn.rs.getString("debito");
                        estab_debito = cn.rs.getString("estab_debito");
                        credito = cn.rs.getString("credito");
                        estab_credito = cn.rs.getString("estab_credito");
                        valor_lcto = cn.rs.getString("valor");
                        historico = cn.rs.getString("historico");
                        complemento = cn.rs.getString("complemento");
                        id = cn.rs.getString("id_bc");

                        lista.addRow(new String[]{
                            tipo,
                            imposto,
                            df.format(Double.parseDouble(valor_lcto)),
                            complemento
                        });

                        valor += cn.rs.getDouble("valor");

                        jTxtValor.setText(df.format(valor));

                        if (var_update == 1) {

                            //PESQUISA NÚMERO DO LANÇAMENTO NO FIREBIRD
                            cnfb.executeConsulta("select gen_id(ctb_lancamentos1,1) from rdb$database");
                            while (cnfb.rs.next()) {
                                numero = cnfb.rs.getString(1);
                            }
                            cnfb.rs.close();

                            //PESQUISA NÚMERO DA TRANSAÇÃO NO FIREBIRD
                            cnfb.executeConsulta("select gen_id(gen_transacoes0,1) from rdb$database");
                            while (cnfb.rs.next()) {
                                transacoes = cnfb.rs.getString(1);
                            }
                            cnfb.rs.close();

                            sql = "INSERT INTO ctb_lancamentos (empresa,numero,debito,"
                                    + "credito,historico,estab_debito,estab_credito,"
                                    + "data,valor,complemento,usu_inc,data_inc,"
                                    + "hora_inc,id_transacao,origem,estabelec_cad) "
                                    + "VALUES ('" + empresa + "','" + numero + "',"
                                    + "'" + debito + "','" + credito + "','" + historico + "',"
                                    + "'" + estab_debito + "','" + estab_credito + "',"
                                    + "'" + dateIn.format(dtf).replace("/", ".") + "',"
                                    + "'" + valor_lcto + "','" + complemento + "',"
                                    + "167,current_date,current_time,'" + transacoes + "',"
                                    + "'CTB',1);";
                            cnfb.executeAtualizacao(sql);

                            sql = "INSERT INTO pis_cofins_lancamentos (id,id_bc,"
                                    + "competencia,data) VALUES ('" + numero + "',"
                                    + "'" + id + "','" + dateOut.format(dtf) + "',"
                                    + "current_date());";
                            cn.executeAtualizacao(sql);

                            montaTabela();

                            //JOptionPane.showMessageDialog(null, "Lançamentos efetuados com sucesso.");
                        } else if (var_update == 2) {
                            sql = "DELETE FROM ctb_lancamentos "
                                    + "WHERE empresa = '" + empresa + "' "
                                    + "AND numero = '" + numero + "';";
                            cnfb.executeAtualizacao(sql);
                            sql = "DELETE FROM pis_cofins_lancamentos "
                                    + "WHERE id_bc = '" + id + "' "
                                    + "AND id = '" + numero + "';";
                            cn.executeAtualizacao(sql);

                            montaTabela();

                            //JOptionPane.showMessageDialog(null, "Estorno efetuado com sucesso.");
                        }

                    }

                    linhas = jTable1.getRowCount();

                    if (linhas > 0
                            && lcto_efetuados == 0) {

                        jBtnGravar.setEnabled(true);
                        jBtnGravar.setText("Lançar");
                        //jBtnEstornar.setEnabled(true);

                    } else if (linhas > 0
                            && lcto_efetuados > 0) {

                        jBtnGravar.setEnabled(true);
                        jBtnGravar.setText("Estornar");

                    } else {
                        jBtnGravar.setEnabled(false);
                        jBtnGravar.setText("Lançar");
                        //JOptionPane.showMessageDialog(this, "Não há lançamentos para integração.");
                    }
                } catch (Exception ex) {
                    jBtnGravar.setEnabled(false);
                    jBtnGravar.setText("Lançar");

                    ConexaoFB.resultadoUpd = 1;
                    ConexaoMySQL.resultadoUpd = 1;

                    tools.DefaultMsg.errorMsg(ex.getMessage());
                    throw new RuntimeException("Não foi possível encontrar os lançamentos.");

                }

                //JOptionPane.showMessageDialog(null, "consulta " + tipo_consulta + " ',update " + var_update);
                break;

        }

        cnfb.desconecta();
        cn.finalizarTransacao();

    }

    private void insereDados() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
