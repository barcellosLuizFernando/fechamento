/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoFB;
import conn.ConexaoMySQL;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author ferna
 */
public class DespAntecipada extends javax.swing.JInternalFrame {

    int lancamento_atual;
    int lancamentos;

    private ConexaoMySQL cn;

    private final ConexaoFB cnfb = new ConexaoFB();

    private final DateFormat dateOut = new SimpleDateFormat("yyyy/MM/dd");
    private final DateFormat dateIn = new SimpleDateFormat("dd/MM/yyyy");

    private final DecimalFormat df = new DecimalFormat("#,##0.00");

    public DespAntecipada(ConexaoMySQL conn) {

        initComponents();
        this.cn = conn;

        MontaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpDti = new javax.swing.JSpinner();
        jSpDtf = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jBtnImportar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTxtCountLct = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblLancamentos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jpb = new javax.swing.JProgressBar();

        setTitle("Importar Lançamentos");

        jLabel1.setText("Data Inicial");

        jSpDti.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1451665260000L), null, null, java.util.Calendar.DAY_OF_MONTH));
        jSpDti.setEditor(new javax.swing.JSpinner.DateEditor(jSpDti, "dd/MM/yyyy"));

        jSpDtf.setModel(new javax.swing.SpinnerDateModel());
        jSpDtf.setEditor(new javax.swing.JSpinner.DateEditor(jSpDtf, "dd/MM/yyyy"));

        jLabel2.setText("Data Final");

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jBtnImportar.setText("Importar");
        jBtnImportar.setEnabled(false);
        jBtnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnImportarActionPerformed(evt);
            }
        });

        jLabel3.setText("Lançamentos");

        jTxtCountLct.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtCountLct.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSpDti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSpDtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnImportar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtCountLct, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jSpDtf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(jBtnImportar)
                        .addComponent(jLabel3)
                        .addComponent(jTxtCountLct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jSpDti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTblLancamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTblLancamentos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MontaLista();

        jpb.setValue(0);

        int qtdLct = jTblLancamentos.getRowCount();

        jTxtCountLct.setText(qtdLct + "");

        if (qtdLct > 0) {
            jBtnImportar.setEnabled(true);
            JOptionPane.showMessageDialog(this, qtdLct + " lançamentos identificados com sucesso!");
        } else {
            jBtnImportar.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Não há lançamentos a serem importados no período.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBtnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnImportarActionPerformed
        jTblLancamentos.selectAll();

        lancamentos = jTblLancamentos.getRowCount();
        lancamento_atual = 0;

        insereDados();

    }//GEN-LAST:event_jBtnImportarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnImportar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpDtf;
    private javax.swing.JSpinner jSpDti;
    private javax.swing.JTable jTblLancamentos;
    private javax.swing.JTextField jTxtCountLct;
    private javax.swing.JProgressBar jpb;
    // End of variables declaration//GEN-END:variables

    private void MontaLista() {
        MontaTabela();

        String sqlMy = "select id from desp_antecipada;";
        //String lista_lancamentos = "0";
        ArrayList lancamentos = new ArrayList();

        try {
        cn.iniciarTransacao();
        cn.executeConsulta(sqlMy);
            while (cn.rs.next()) {
                //lista_lancamentos += "," + cn.rs.getString(1);
                lancamentos.add(cn.rs.getString(1));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        cn.finalizarTransacao();

        DefaultTableModel lista = (DefaultTableModel) jTblLancamentos.getModel();

        String dti = dateOut.format(jSpDti.getValue()).replace("/", ".");
        String dtf = dateOut.format(jSpDtf.getValue()).replace("/", ".");
        String sql = "select a.numero, a.valor, a.complemento "
                + "from cad_planocontas b "
                + "inner join ctb_lancamentos a on (b.empresa = a.empresa and b.codigo = a.debito and a.data between '" + dti + "' and '" + dtf + "') "
                + "where b.empresa = 1  "
                + "and left(b.classificacao,7) = '1.1.9.1' ;";
        //+ "and numero not in (" + lista_lancamentos + ");";

        //MENSAGEM USADA PARA DEMONSTRAR SE A CONSULTA ESTAVA SENDO REALIZADA CORRETAMENTE
        //JOptionPane.showMessageDialog(this, sql);
        if (cnfb.conecta()) {
            try {
                cnfb.executeConsulta(sql);
                while (cnfb.rs.next()) {
                    if (!lancamentos.contains(cnfb.rs.getString("numero"))) {
                        lista.addRow(new String[]{
                            cnfb.rs.getString("numero"),
                            df.format(cnfb.rs.getDouble("valor")),
                            cnfb.rs.getString("complemento")});
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            } finally {
                cnfb.desconecta();
            }
        }
    }

    private void MontaTabela() {
        DefaultTableModel lista = (DefaultTableModel) jTblLancamentos.getModel();

        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Numero");
        lista.addColumn("Valor");
        lista.addColumn("Complemento");

        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        jTblLancamentos.getColumnModel().getColumn(0).setMaxWidth(100);
        jTblLancamentos.getColumnModel().getColumn(0).setMinWidth(100);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(100);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(0).setMinWidth(100);
        jTblLancamentos.getColumnModel().getColumn(1).setMaxWidth(100);
        jTblLancamentos.getColumnModel().getColumn(1).setMinWidth(100);
        jTblLancamentos.getColumnModel().getColumn(1).setCellRenderer(direita);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(100);
        jTblLancamentos.getTableHeader().getColumnModel().getColumn(1).setMinWidth(100);

    }

    private void preencheBarra() {
        new Thread() {
            public void run() {
                //recebe dados
                jpb.setMinimum(0);
                jpb.setMaximum(lancamentos);

                jpb.setValue(lancamento_atual);

                jTxtCountLct.setText(lancamento_atual + "/" + lancamentos);

            }
        }.start();
    }

    private void insereDados() {
        new Thread() {
            public void run() {

                DefaultTableModel lista = (DefaultTableModel) jTblLancamentos.getModel();

                int linha = jTblLancamentos.getSelectedRow();

                String numero;
                String id_import = null;
                String id_ususario = null;
                String descricao = "DESPESAS ANTECIPADAS";
                String empresa = null;
                String debito = null;
                String credito = null;
                String historico = null;
                String estab_debito = null;
                String estab_credito = null;
                String data = null;
                String valor = null;
                String complemento = null;
                String origem = null;
                String usu_inc = null;
                String sqlfb;
                String sqlMy;

                try {
                cn.iniciarTransacao();
                cn.executeConsulta("show table status like 'importacoes';");
                    while (cn.rs.next()) {
                        id_import = cn.rs.getString("Auto_increment");
                    }
                    cn.executeAtualizacao("INSERT INTO importacoes (id,descricao,"
                            + "data,usuario) VALUES ('" + id_import + "',"
                            + "'" + descricao + "', current_date()," + id_ususario + ");");

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

                cnfb.conecta();

                for (int x = lancamentos; x != 0; x--) {
                    numero = jTblLancamentos.getValueAt(linha, 0).toString();
                    sqlfb = "select * from ctb_lancamentos where empresa = 1 and numero = '" + numero + "';";
                    try {
                        cnfb.executeConsulta(sqlfb);
                        while (cnfb.rs.next()) {
                            empresa = cnfb.rs.getString("empresa");
                            debito = cnfb.rs.getString("debito");
                            credito = cnfb.rs.getString("credito");
                            historico = cnfb.rs.getString("historico");
                            estab_credito = cnfb.rs.getString("estab_credito");
                            estab_debito = cnfb.rs.getString("estab_debito");
                            data = cnfb.rs.getString("data");
                            valor = cnfb.rs.getString("valor");
                            complemento = cnfb.rs.getString("complemento");
                            origem = cnfb.rs.getString("origem");
                            usu_inc = cnfb.rs.getString("usu_inc");
                        }
                        cnfb.rs.close();

                        sqlMy = "insert into desp_antecipada (id,empresa,debito,credito,"
                                + "historico,estab_credito,estab_debito,data,valor,"
                                + "complemento,origem,usu_inc,id_importacao) VALUES ('" + numero + "',"
                                + "'" + empresa + "','" + debito + "'," + credito + ","
                                + "" + historico + "," + estab_credito + ","
                                + "'" + estab_debito + "','" + data + "','" + valor + "',"
                                + "'" + complemento + "','" + origem + "','" + usu_inc + "',"
                                + "'" + id_import + "');";

                        cn.executeAtualizacao(sqlMy);

                        lista.removeRow(linha);

                        lancamento_atual++;
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    } finally {
                        cn.finalizarTransacao();
                        cnfb.desconecta();
                    }

                    preencheBarra();

                }
                if (jTblLancamentos.getRowCount() == 0) {
                    jBtnImportar.setEnabled(false);

                    jTxtCountLct.setText("");
                    JOptionPane.showMessageDialog(null, "Importação concluída com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Há lançamentos que não foram importados.");
                }
                cn.finalizarTransacao();
                cnfb.desconecta();
            }
        }.start();
    }
}
