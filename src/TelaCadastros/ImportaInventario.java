/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoMySQL;
import tools.ColorRender;
import tools.Inventario;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author luiz.barcellos
 */
public class ImportaInventario extends javax.swing.JInternalFrame {

    private Inventario inv;
    private final ConexaoMySQL cn;
    private DefaultTableModel lista;
    private String data_inicial;
    private String data_final;
    private int empresa;
    private double valor;
    private int quantidade;

    /**
     * Creates new form ImportaBalancete
     *
     * @param conn
     */
    public ImportaInventario(ConexaoMySQL conn) {
        initComponents();
        this.cn = conn;
        inv = new Inventario(conn);
        montaCB();
        montaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/####");
            jTxtCompetencia = new javax.swing.JFormattedTextField(data);
            jLabel1 = new javax.swing.JLabel();
            jButton1 = new javax.swing.JButton();
            jButton2 = new javax.swing.JButton();
            jComboBox1 = new javax.swing.JComboBox<>();
            jCheckBox1 = new javax.swing.JCheckBox();
            jScrollPane1 = new javax.swing.JScrollPane();
            jTable1 = new javax.swing.JTable();
            jPanel2 = new javax.swing.JPanel();
            jProgressBar1 = new javax.swing.JProgressBar();
            jPanel3 = new javax.swing.JPanel();
            jLabel2 = new javax.swing.JLabel();
            jTxtValor = new javax.swing.JTextField();
            jTxtQuantidade = new javax.swing.JTextField();
            jLabel3 = new javax.swing.JLabel();

            setClosable(true);
            setTitle("Importar Inventário");

        }
        catch (Exception e){
        }

        jLabel1.setText("Competência");

        jButton1.setText("Importar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox1.setText("Local");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, 0, 416, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1)
                .addComponent(jButton2)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jCheckBox1))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumo"));

        jLabel2.setText("Valor");

        jTxtValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtValor.setEnabled(false);

        jTxtQuantidade.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtQuantidade.setEnabled(false);

        jLabel3.setText("Produtos");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jTxtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTxtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!"  /    ".equals(jTxtCompetencia.getText())) {
            jProgressBar1.setIndeterminate(true);

            if ("Importar".equals(jButton1.getText())) {
                importar();
            }
            pesquisar();

        } else {
            JOptionPane.showMessageDialog(this, "Competência não informada.", "Resumo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        if (jCheckBox1.isSelected()) {
            jButton1.setText("Pesquisar");
        } else {
            jButton1.setText("Importar");
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTxtCompetencia;
    private javax.swing.JTextField jTxtQuantidade;
    private javax.swing.JTextField jTxtValor;
    // End of variables declaration//GEN-END:variables

    private void montaCB() {
        jComboBox1.removeAllItems();

        if (cn.iniciarTransacao()) {
            try {
                cn.executeConsulta("SELECT nome FROM empresa ORDER BY nome;");
                while (cn.rs.next()) {
                    jComboBox1.addItem(cn.rs.getString("nome"));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {
                cn.finalizarTransacao();
            }
        }

    }

    private void defineDatas() {

        if (cn.iniciarTransacao()) {

            try {
                cn.executeConsulta("SELECT iD FROM empresa WHERE nome = '" + jComboBox1.getSelectedItem() + "';");
                while (cn.rs.next()) {
                    empresa = cn.rs.getInt("id");
                }
                System.out.println("Empresa: " + empresa);
                System.out.println("Data Inicial: " + data_inicial);
                System.out.println("Data Final: " + data_final);

                data_inicial = "01/" + jTxtCompetencia.getText();
                data_final = tools.FormatNumbers.dateBrDefault(tools.ManipulaData.lastDay(jTxtCompetencia.getText()));
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            } finally {
                cn.finalizarTransacao();
            }

        }
    }

    private void importar() {

        defineDatas();
        if (inv.importaInventario(data_final, empresa) == false) {
            jProgressBar1.setIndeterminate(false);
        }

    }

    private void pesquisar() {

        valor = 0.00;
        quantidade = 0;

        int linhas = 0;

        montaTabela();
        defineDatas();

        if (cn.iniciarTransacao()) {
            try {
                cn.executeConsulta("SELECT * FROM inventario "
                        + "WHERE data = '" + tools.FormatNumbers.dateUsDefault(tools.ManipulaData.parseBrToDate(data_final)) + "' "
                        + "AND empresa = '" + empresa + "' "
                        + "ORDER BY nomeproduto;");
                while (cn.rs.next()) {

                    linhas++;

                    lista.addRow(new String[]{
                        cn.rs.getString("produto"),
                        cn.rs.getString("nomeproduto"),
                        tools.FormatNumbers.numUsToBr(cn.rs.getDouble("quantidade")),
                        tools.FormatNumbers.numUsToBr(cn.rs.getDouble("custo")),
                        tools.FormatNumbers.numUsToBr(cn.rs.getDouble("valor"))
                    });

                    valor += cn.rs.getDouble("valor");
                    quantidade++;

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {
                cn.finalizarTransacao();
            }
        }

        jProgressBar1.setIndeterminate(false);
        jProgressBar1.setValue(100);

        jTxtValor.setText(tools.FormatNumbers.numUsToBr(valor));
        jTxtQuantidade.setText(quantidade + "");
    }

    private void montaTabela() {

        lista = (DefaultTableModel) jTable1.getModel();

        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Cod");
        lista.addColumn("Descrição");
        lista.addColumn("Quantidade");
        lista.addColumn("Custo");
        lista.addColumn("Valor");

        //direita.setHorizontalAlignment(SwingConstants.RIGHT);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
        jTable1.getColumnModel().getColumn(0).setMinWidth(50);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(50);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(50);

        jTable1.getColumnModel().getColumn(2).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(2).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMinWidth(80);

        jTable1.getColumnModel().getColumn(3).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(3).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(3).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(3).setMinWidth(80);

        jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(4).setMinWidth(100);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMinWidth(80);

        jTable1.setDefaultRenderer(Object.class, new ColorRender());

    }
}
