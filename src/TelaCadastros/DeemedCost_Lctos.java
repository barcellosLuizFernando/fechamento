/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoFB;
import conn.ConexaoMySQL;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author luiz.barcellos
 */
public class DeemedCost_Lctos extends javax.swing.JInternalFrame {

    private MaskFormatter data;
    private MaskFormatter competencia;
    private ConexaoMySQL cn;
    private DecimalFormat df = new DecimalFormat("#,##0.00");
    private DateFormat dateIn = new SimpleDateFormat("dd/MM/yyyy");
    private DateFormat dateOut = new SimpleDateFormat("yyyy/MM/dd");
    private ConexaoFB cnfb = new ConexaoFB();

    /**
     * Creates new form DeemedCost_Lctos
     */
    public DeemedCost_Lctos(ConexaoMySQL conn) {
        try {
            competencia = new javax.swing.text.MaskFormatter("##/####");
            data = new javax.swing.text.MaskFormatter("##/##/####");
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        initComponents();
        this.cn = conn;

        montaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTxtCompetencia = new javax.swing.JFormattedTextField(competencia);
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setTitle("Lançamento de Custo Atribuído");

        jLabel4.setText("Competência");

        jTxtCompetencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtCompetenciaFocusLost(evt);
            }
        });

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Gravar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Estornar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 647, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jLabel4)
                .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2)
                .addComponent(jButton3))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtCompetenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtCompetenciaFocusLost
        if ("  /    ".equals(jTxtCompetencia.getText())) {

            jTxtCompetencia.setValue(null);

        }
    }//GEN-LAST:event_jTxtCompetenciaFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pesquisaLctos();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        gravar(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        estornar(true);
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField jTxtCompetencia;
    // End of variables declaration//GEN-END:variables

    private DefaultTableModel montaTabela() {

        DefaultTableModel lista = (DefaultTableModel) jTable1.getModel();

        lista.setRowCount(0);
        lista.setColumnCount(0);

        lista.addColumn("Tipo");
        //lista.addColumn("Setor");
        //lista.addColumn("Descrição");
        lista.addColumn("P");
        lista.addColumn("Valor");
        lista.addColumn("Data");
        lista.addColumn("Unid");
        lista.addColumn("Código");
        lista.addColumn("Complemento");
        lista.addColumn("D");
        lista.addColumn("C");
        lista.addColumn("Lancamento");
        lista.addColumn("Reserva");
        lista.addColumn("Entrada");

        jTable1.getColumnModel().getColumn(0).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(0).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(80);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(1).setMinWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMinWidth(40);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(2).setMinWidth(60);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(60);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMinWidth(60);
        jTable1.getColumnModel().getColumn(3).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(3).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(3).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(3).setMinWidth(80);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(4).setMinWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMinWidth(40);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(5).setMinWidth(60);
        jTable1.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(60);
        jTable1.getTableHeader().getColumnModel().getColumn(5).setMinWidth(60);
        jTable1.getColumnModel().getColumn(7).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(7).setMinWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(7).setMaxWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(7).setMinWidth(40);
        jTable1.getColumnModel().getColumn(8).setMaxWidth(40);
        jTable1.getColumnModel().getColumn(8).setMinWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(8).setMaxWidth(40);
        jTable1.getTableHeader().getColumnModel().getColumn(8).setMinWidth(40);
        jTable1.getColumnModel().getColumn(9).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(9).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(9).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(9).setMinWidth(80);
        jTable1.getColumnModel().getColumn(10).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(10).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(10).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(10).setMinWidth(80);
        jTable1.getColumnModel().getColumn(11).setMaxWidth(80);
        jTable1.getColumnModel().getColumn(11).setMinWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(11).setMaxWidth(80);
        jTable1.getTableHeader().getColumnModel().getColumn(11).setMinWidth(80);

        return lista;
    }

    private void pesquisaLctos() {

        DefaultTableModel lista = montaTabela();

        String competencia = jTxtCompetencia.getText();

        String sql = "CALL fechamento.deemedcost_lctos('" + competencia + "');";
        if (cn.iniciarTransacao()) {
            try {
                cn.executeAtualizacao(sql);
                sql = "select tipo, setor, descricao, parcela, valor, data, "
                        + "estab, id, complemento, debito, credito, lancamento, "
                        + "reserva, entrada from tmp_lancamentos;";
                cn.executeConsulta(sql);
                while (cn.rs.next()) {
                    lista.addRow(new String[]{
                        cn.rs.getString("tipo"),
                        cn.rs.getString("parcela"),
                        df.format(cn.rs.getDouble("valor")),
                        dateIn.format(cn.rs.getDate("data")),
                        cn.rs.getString("estab"),
                        cn.rs.getString("id"),
                        cn.rs.getString("complemento"),
                        cn.rs.getString("debito"),
                        cn.rs.getString("credito"),
                        cn.rs.getString("lancamento"),
                        "Descontinuado",
                        cn.rs.getString("entrada")
                    });
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            } finally {
                cn.finalizarTransacao();
            }
        }

    }

    public void gravar(boolean lcto_reserva) {

        String empresa = "1";
        String numero = "0";
        String debito;
        String credito;
        String historico = "603";
        String estab_debito;
        String estab_credito;
        String valor_lcto;
        String complemento;
        String transacoes = "0";
        String data;
        String entrada;
        String id;
        String sql;
        String parcela;
        boolean upd_FB;
        boolean upd_MySQL;
        String lancamento;

        try {

            cn.iniciarTransacao();
            cnfb.conecta();

            integracao:
            for (int i = 0; i < jTable1.getRowCount(); i++) {

                try {
                    if (lcto_reserva) {
                        lancamento = jTable1.getValueAt(i, 9).toString();
                    } else {
                        lancamento = jTable1.getValueAt(i, 10).toString();
                    }
                } catch (Exception e) {
                    // SE A CÉLULA DO LANÇAMENTO ESTIVER EM BRANCO, GERA UMA
                    // EXCEPTION PORQUE NÃO PODE CONVERTER NULL EM STRING
                    lancamento = "";
                }

                if (lancamento.equals("")) {

                    if (lcto_reserva) {
                        debito = jTable1.getValueAt(i, 7).toString();
                        credito = jTable1.getValueAt(i, 8).toString();
                        complemento = jTable1.getValueAt(i, 6).toString();
                    } else {

                        if ("31849".equals(jTable1.getValueAt(i, 7).toString())) {
                            debito = "31825";
                            credito = "31849";
                        } else {
                            credito = "31825";
                            debito = "31849";
                        }

                        complemento = "Realização de Reserva ref. " + jTable1.getValueAt(i, 6).toString();;

                    }
                    estab_debito = estab_credito = jTable1.getValueAt(i, 4).toString();
                    data = jTable1.getValueAt(i, 3).toString().replace("/", ".");
                    valor_lcto = jTable1.getValueAt(i, 2).toString().replace(".", "").replace(",", ".");
                    entrada = jTable1.getValueAt(i, 11).toString();
                    id = jTable1.getValueAt(i, 5).toString();
                    parcela = jTable1.getValueAt(i, 1).toString();

                    //PESQUISA NÚMERO DO LANÇAMENTO NO FIREBIRD
                    cnfb.executeConsulta("select gen_id(ctb_lancamentos1,1) from rdb$database");
                    while (cnfb.rs.next()) {
                        numero = cnfb.rs.getString(1);
                    }
                    cnfb.rs.close();
                    System.out.println("Número Lançamento: " + numero);

                    //PESQUISA NÚMERO DA TRANSAÇÃO NO FIREBIRD
                    cnfb.executeConsulta("select gen_id(gen_transacoes0,1) from rdb$database");
                    while (cnfb.rs.next()) {
                        transacoes = cnfb.rs.getString(1);
                    }
                    cnfb.rs.close();

                    System.out.println("Transação: " + transacoes);

                    sql = "INSERT INTO ctb_lancamentos (empresa,numero,debito,"
                            + "credito,historico,estab_debito,estab_credito,"
                            + "data,valor,complemento,usu_inc,data_inc,"
                            + "hora_inc,id_transacao,origem,estabelec_cad) "
                            + "VALUES ('" + empresa + "','" + numero + "',"
                            + "'" + debito + "','" + credito + "','" + historico + "',"
                            + "'" + estab_debito + "','" + estab_credito + "',"
                            + "'" + data + "'," + "'" + valor_lcto + "',"
                            + "'" + complemento + "',167,current_date,current_time,"
                            + "'" + transacoes + "','CTB',1);";
                    upd_FB = cnfb.executeAtualizacao(sql);

                    if ("ESTORNO".equals(jTable1.getValueAt(i, 0)) && lcto_reserva) {
                        System.out.println("\nLançamento Reserva: " + lcto_reserva + ", ESTORNO");
                        sql = "UPDATE fechamento.deemedcost SET ctb_baixa = '" + numero + "' "
                                + "WHERE id = '" + id + "' AND estab = '" + estab_debito + "' "
                                + "AND entrada = '" + entrada + "';";
                    } else {
                        System.out.println("\nLançamento Reserva: " + lcto_reserva);
                        if (lcto_reserva) {
                            sql = "UPDATE fechamento.deemedcost_det SET lancamento = '" + numero + "' "
                                    + "WHERE id = '" + id + "' AND estab = '" + estab_debito + "' "
                                    + "AND entrada = '" + entrada + "' "
                                    + "AND parcela = '" + parcela + "';";
                        } else {
                            sql = "UPDATE fechamento.deemedcost_det SET reserva = '" + numero + "' "
                                    + "WHERE id = '" + id + "' AND estab = '" + estab_debito + "' "
                                    + "AND entrada = '" + entrada + "' "
                                    + "AND parcela = '" + parcela + "';";
                        }
                    }

                    // SÓ LANÇARÁ O ESTORNO QUANDO A VARIÁVEL lcto_reserva = TRUE
                    if (lcto_reserva == false && "ESTORNO".equals(jTable1.getValueAt(i, 0))) {
                        upd_MySQL = true;
                    } else {
                        upd_MySQL = cn.executeAtualizacao(sql);
                    }

                    // DESCONECTA, DESFAZENDO TODAS AS ALTERAÇÕES
                    if (upd_FB == false | upd_MySQL == false) {
                        cn.setResultadoUpd(99);
                        cnfb.resultadoUpd = 99;

                        break integracao;
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            cn.setResultadoUpd(99);
            cnfb.resultadoUpd = 99;
        } finally {
            cn.finalizarTransacao();
            cnfb.desconecta();
        }

        if (lcto_reserva == false) {
            JOptionPane.showMessageDialog(this, "Procedimento finalizado.");
            pesquisaLctos();
        }

        if (lcto_reserva) {
            gravar(false);
        }

    }

    private void estornar(boolean lcto_reserva) {
        String sql;
        boolean upd_FB;
        boolean upd_MySQL;
        String lancamento;
        String entrada;
        String id;
        String parcela;
        String estab_debito;
        String estab_credito;

        try {

            cn.iniciarTransacao();
            cnfb.conecta();

            integracao:
            for (int i = 0; i < jTable1.getRowCount(); i++) {

                entrada = jTable1.getValueAt(i, 11).toString();
                id = jTable1.getValueAt(i, 5).toString();
                parcela = jTable1.getValueAt(i, 1).toString();
                estab_debito = estab_credito = jTable1.getValueAt(i, 4).toString();

                try {
                    if (lcto_reserva) {
                        lancamento = jTable1.getValueAt(i, 9).toString();
                    } else {
                        lancamento = jTable1.getValueAt(i, 10).toString();
                    }
                } catch (Exception e) {
                    lancamento = "";
                }

                if (!"".equals(lancamento)
                        | !"0".equals(lancamento)) {

                    sql = "DELETE FROM ctb_lancamentos WHERE empresa = 1 "
                            + "AND numero = '" + lancamento + "';";
                    upd_FB = cnfb.executeAtualizacao(sql);

                    if ("ESTORNO".equals(jTable1.getValueAt(i, 0)) && lcto_reserva) {
                        sql = "UPDATE fechamento.deemedcost SET ctb_baixa = null "
                                + "WHERE id = '" + id + "' AND estab = '" + estab_debito + "' "
                                + "AND entrada = '" + entrada + "';";
                    } else {

                        System.out.println("\nLançamento reserva: " + lcto_reserva);

                        if (lcto_reserva) {
                            sql = "UPDATE fechamento.deemedcost_det SET lancamento = null "
                                    + "WHERE id = '" + id + "' AND estab = '" + estab_debito + "' "
                                    + "AND entrada = '" + entrada + "' "
                                    + "AND parcela = '" + parcela + "';";
                        } else {
                            sql = "UPDATE fechamento.deemedcost_det SET reserva = null "
                                    + "WHERE id = '" + id + "' AND estab = '" + estab_debito + "' "
                                    + "AND entrada = '" + entrada + "' "
                                    + "AND parcela = '" + parcela + "';";
                        }
                    }

                    // SÓ LANÇARÁ O ESTORNO QUANDO A VARIÁVEL lcto_reserva = TRUE
                    if (lcto_reserva == false && "ESTORNO".equals(jTable1.getValueAt(i, 0))) {
                        upd_MySQL = true;
                    } else {
                        upd_MySQL = cn.executeAtualizacao(sql);
                    }

                    // DESCONECTA, DESFAZENDO TODAS AS ALTERAÇÕES
                    if (upd_FB == false | upd_MySQL == false) {
                        cn.setResultadoUpd(99);
                        cnfb.resultadoUpd = 99;

                        break integracao;
                    }

                } // FIM DA CONDIÇÃO
            } //FIM DO LAÇO

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            cn.setResultadoUpd(99);
            cnfb.resultadoUpd = 99;
        } finally {
            cn.finalizarTransacao();
            cnfb.desconecta();
        }

        if (lcto_reserva == false) {
            JOptionPane.showMessageDialog(this, "Procedimento finalizado.");
            pesquisaLctos();
        }

        if (lcto_reserva) {
            estornar(false);
        }

    } // FIM DO MÉTODO
}
