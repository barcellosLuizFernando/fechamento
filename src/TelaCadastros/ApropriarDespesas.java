/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoFB;
import conn.ConexaoMySQL;
import com.sun.scenario.effect.AbstractShadow;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ferna
 */
public class ApropriarDespesas extends javax.swing.JInternalFrame {

    private int lancamento_atual;

    int lancamentos_jpb;

    private final ConexaoFB cnfb = new ConexaoFB();

    private ConexaoMySQL cn;

    private final DecimalFormat df = new DecimalFormat("#,##0.00");

    private final DefaultTableCellRenderer direita = new DefaultTableCellRenderer();

    private final DateFormat dateOut = new SimpleDateFormat("yyyy/MM/dd");
    private final DateFormat dateIn = new SimpleDateFormat("dd/MM/yyyy");

    private Date dti;
    private Date dtf;

    /**
     * Creates new form ApropriarDespesas
     */
    public ApropriarDespesas(ConexaoMySQL conn) {
        initComponents();
        this.cn = conn;
        montaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jBtnPesquisar = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTxtTeste = new javax.swing.JTextField();
        jpb = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTxtValor = new javax.swing.JTextField();
        jBtnLimpar = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JButton();
        jBtnGravar2 = new javax.swing.JButton();
        jBtnEstornar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Apropriar despesas antecipadas");

        jLabel1.setText("CompetÃªncia");

        jSpinner1.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1485880920000L), null, null, java.util.Calendar.MONTH));
        jSpinner1.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner1, "MMMM/yyyy"));

        jBtnPesquisar.setText("Pesquisar");
        jBtnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPesquisarActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Estornar");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jTxtTeste.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtTeste)
                .addGap(136, 136, 136)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPesquisar)
                    .addComponent(jCheckBox1)
                    .addComponent(jTxtTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpb.setOrientation(1);
        jpb.setToolTipText("");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Quantidade");

        jTxtValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtValor.setEnabled(false);

        jBtnLimpar.setText("Limpar");
        jBtnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimparActionPerformed(evt);
            }
        });

        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });

        jBtnGravar2.setText("Gravar");
        jBtnGravar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGravar2ActionPerformed(evt);
            }
        });

        jBtnEstornar.setText("Estornar");
        jBtnEstornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEstornarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(jBtnEstornar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnGravar2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnGravar2)
                        .addComponent(jBtnCancelar)
                        .addComponent(jBtnLimpar)
                        .addComponent(jBtnEstornar))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jTxtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPesquisarActionPerformed
        montaTabela();

        ajustaDatas();

        incluiPesquisa();


    }//GEN-LAST:event_jBtnPesquisarActionPerformed

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        /*        if (jCheckBox1.isSelected()) {

            jBtnPesquisar.setEnabled(false);
            jBtnEstornar.setEnabled(true);

            

            String data;

            String sql = "SELECT DISTINCT data "
                    + "FROM quebra_tecnica "
                    + "WHERE data IN (SELECT DISTINCT competencia FROM quebra_tecnica_lcto) "
                    + "ORDER BY data;";

            cn.iniciarTransacao();
            cn.executeConsulta(sql);
            try {
                while (cn.rs.next()) {
                    data = dateIn.format(cn.rs.getDate("data"));
                }
            } catch (SQLException ex) {
                throw new RuntimeException("NÃ£o foi possÃ­vel capturar as competÃªncias.");
            }
            cn.finalizarTransacao();

        } else {
            montaTabela();
        }*/
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jBtnEstornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEstornarActionPerformed
        lancamento_atual = 0;

        estornaDados();
    }//GEN-LAST:event_jBtnEstornarActionPerformed

    private void jBtnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimparActionPerformed
        montaTabela();
        jCheckBox1.setSelected(false);

    }//GEN-LAST:event_jBtnLimparActionPerformed

    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    private void jBtnGravar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGravar2ActionPerformed
        try {
            insereDados();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }//GEN-LAST:event_jBtnGravar2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnEstornar;
    private javax.swing.JButton jBtnGravar2;
    private javax.swing.JButton jBtnLimpar;
    private javax.swing.JButton jBtnPesquisar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTxtTeste;
    private javax.swing.JTextField jTxtValor;
    private javax.swing.JProgressBar jpb;
    // End of variables declaration//GEN-END:variables

    private void estornaDados() {
        new Thread() {
            public void run() {

                String sql;
                String empresa;
                String numero;
                String id;
                String parcela;

                cn.iniciarTransacao();
                cnfb.conecta();

                try {
                    sql = "SELECT count(numero) from lanc_automaticos "
                            + "WHERE numero IS NOT NULL "
                            + "AND competencia BETWEEN '" + dateOut.format(dti) + "' "
                            + "AND '" + dateOut.format(dtf) + "';";

                    cn.executeConsulta(sql);

                    while (cn.rs.next()) {
                        lancamentos_jpb = cn.rs.getInt(1);
                    }
                    cn.rs.close();

                    sql = "SELECT * from lanc_automaticos "
                            + "WHERE numero IS NOT NULL "
                            + "AND competencia BETWEEN '" + dateOut.format(dti) + "' "
                            + "AND '" + dateOut.format(dtf) + "';";

                    cn.executeConsulta(sql);
                    while (cn.rs.next()) {
                        empresa = cn.rs.getString("empresa");
                        numero = cn.rs.getString("numero");
                        id = cn.rs.getString("id");
                        parcela = cn.rs.getString("parcela");

                        sql = "DELETE FROM ctb_lancamentos "
                                + "WHERE empresa = '" + empresa + "' "
                                + "AND numero = '" + numero + "' "
                                + "AND origem = 'CTB';";
                        cnfb.executeAtualizacao(sql);

                        sql = "DELETE FROM desp_antecipada_lancamentos "
                                + "WHERE id = '" + id + "' "
                                + "AND parcela = '" + parcela + "';";
                        cn.executeAtualizacao(sql);

                        lancamento_atual++;

                        preencheBarra();

                    }

                    JOptionPane.showMessageDialog(null, "LanÃ§amentos estornados com sucesso.");

                } catch (Exception e) {

                    throw new RuntimeException("NÃ£o foi possÃ­vel estornar os lanÃ§amentos.");
                }
                cnfb.desconecta();
                cn.finalizarTransacao();

                montaTabela();

            }
        }.start();
    }

    private void preencheBarra() {
        new Thread() {
            public void run() {
                //recebe dados
                jpb.setMinimum(0);
                jpb.setMaximum(lancamentos_jpb);

                jpb.setValue(lancamento_atual);

                jpb.setToolTipText((lancamento_atual + "/" + lancamentos_jpb));

            }
        }.start();
    }

    private void montaTabela() {
        jBtnPesquisar.setEnabled(true);
        jBtnEstornar.setEnabled(false);

        DefaultTableModel lista = (DefaultTableModel) jTable1.getModel();

        jBtnGravar2.setEnabled(false);
        jBtnEstornar.setEnabled(false);
        //jCheckBox1.setSelected(false);

        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Numero");
        lista.addColumn("Valor");
        lista.addColumn("Unidade");
        lista.addColumn("Complemento");

        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(0).setMinWidth(100);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(100);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(100);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(1).setMinWidth(100);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(100);
        jTable1.getTableHeader().getColumnModel().getColumn(1).setMinWidth(100);
        jTable1.getColumnModel().getColumn(1).setCellRenderer(direita);
        jTable1.getColumnModel().getColumn(2).setMaxWidth(60);
        jTable1.getColumnModel().getColumn(2).setMinWidth(60);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(60);
        jTable1.getTableHeader().getColumnModel().getColumn(2).setMinWidth(60);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(direita);

        jpb.setValue(0);
        jTxtValor.setText("0.00");
    }

    private void insereDados() {
        new Thread() {
            public void run() {

                conn.ConexaoMySQL cn1 = new ConexaoMySQL();
                cn1.arquivo = cn.arquivo;

                lancamento_atual = 0;

                String numero = null;
                String transacoes = null;
                String empresa = null;
                String data;
                String debito;
                String estab_debito;
                String credito;
                String estab_credito;
                String valor;
                String historico;
                String complemento;
                String id;
                String parcela;

                String sql;

                try {
                    cn1.conecta();
                    cnfb.conecta();

                    cn.iniciarTransacao();

                    //DEFINE NÃMERO DE LANÃAMENTOS PARA A BARRA DE PROGRESSO
                    cn.executeConsulta("SELECT count(id) FROM lanc_automaticos "
                            + "WHERE numero IS NULL "
                            + "AND competencia BETWEEN '" + dateOut.format(dti) + "' "
                            + "AND '" + dateOut.format(dtf) + "';");
                    while (cn.rs.next()) {
                        lancamentos_jpb = cn.rs.getInt(1);
                    }
                    cn.rs.close();

                    //BUSCA LANÃAMENTOS AINDA NÃO INTEGRADOS
                    cn.executeConsulta("SELECT * FROM lanc_automaticos "
                            + "WHERE numero IS NULL "
                            + "AND competencia BETWEEN '" + dateOut.format(dti) + "' "
                            + "AND '" + dateOut.format(dtf) + "';");
                    while (cn.rs.next()) {

                        //PESQUISA NÃMERO DO LANÃAMENTO NO FIREBIRD
                        cnfb.executeConsulta("select gen_id(ctb_lancamentos1,1) from rdb$database");
                        while (cnfb.rs.next()) {
                            numero = cnfb.rs.getString(1);
                        }
                        cnfb.rs.close();

                        //PESQUISA NÃMERO DA TRANSAÃÃO NO FIREBIRD
                        cnfb.executeConsulta("select gen_id(gen_transacoes0,1) from rdb$database");
                        while (cnfb.rs.next()) {
                            transacoes = cnfb.rs.getString(1);
                        }
                        cnfb.rs.close();

                        //DEFINE VALOR DAS COLUNAS
                        empresa = cn.rs.getString("empresa");
                        data = dateIn.format(cn.rs.getDate("competencia")).replace("/", ".");
                        debito = cn.rs.getString("debito");
                        estab_debito = cn.rs.getString("estab_debito");
                        credito = cn.rs.getString("credito");
                        estab_credito = cn.rs.getString("estab_credito");
                        valor = cn.rs.getString("valor");
                        historico = cn.rs.getString("historico");
                        complemento = cn.rs.getString("complemento");
                        id = cn.rs.getString("id");
                        parcela = cn.rs.getString("parcela");

                        sql = "INSERT INTO ctb_lancamentos (empresa,numero,debito,"
                                + "credito,historico,estab_debito,estab_credito,"
                                + "data,valor,complemento,usu_inc,data_inc,"
                                + "hora_inc,id_transacao,origem,estabelec_cad) "
                                + "VALUES ('" + empresa + "','" + numero + "',"
                                + "'" + debito + "','" + credito + "','" + historico + "',"
                                + "'" + estab_debito + "','" + estab_credito + "',"
                                + "'" + data + "','" + valor + "','" + complemento + "',"
                                + "167,current_date,current_time,'" + transacoes + "',"
                                + "'CTB',1);";

                        cnfb.executeAtualizacao(sql);

                        sql = "INSERT INTO desp_antecipada_lancamentos (id,parcela,"
                                + "data,numero) VALUES ('" + id + "','" + parcela + "',"
                                + "current_date(),'" + numero + "');";
                        cn1.executeAtualizacao(sql);

                        //JOptionPane.showMessageDialog(null, sql);
                        lancamento_atual++;

                        preencheBarra();

                    }

                    JOptionPane.showMessageDialog(null, "LanÃ§amentos integrados com sucesso.");

                    cn1.desconecta();
                } catch (Exception ex) {
                    ConexaoFB.resultadoUpd = 1;
                    ConexaoMySQL.resultadoUpd = 1;

                    JOptionPane.showMessageDialog(null, "NÃ£o foi possÃ­vel realizar a integraÃ§Ã£o:" + ex);
                }
                cn.finalizarTransacao();
                cnfb.desconecta();

                montaTabela();

            }
        }.start();

    }

    private void ajustaDatas() {
        Date competencia = (Date) jSpinner1.getValue();

        Calendar data2 = Calendar.getInstance();

        //PRIMEIRO DIA
        data2.setTime(competencia);
        data2.set(Calendar.DAY_OF_MONTH, 1);

        dti = data2.getTime();

        //ULTIMO DIA
        data2.set(Calendar.MONTH, data2.get(Calendar.MONTH) + 1);
        data2.set(Calendar.DAY_OF_MONTH, 0);

        dtf = data2.getTime();
    }

    private void incluiPesquisa() {

        Double valor = 0.00;

        DefaultTableModel lista = (DefaultTableModel) jTable1.getModel();

        String sql;

        if (jCheckBox1.isSelected()) {
            sql = "SELECT * FROM lanc_automaticos "
                    + "WHERE numero IS NOT NULL "
                    + "AND competencia BETWEEN '" + dateOut.format(dti) + "' "
                    + "AND '" + dateOut.format(dtf) + "';";

        } else {
            sql = "SELECT * FROM lanc_automaticos "
                    + "WHERE numero IS NULL "
                    + "AND competencia BETWEEN '" + dateOut.format(dti) + "' "
                    + "AND '" + dateOut.format(dtf) + "';";
        }

        //JOptionPane.showMessageDialog(this, sql);
        cn.iniciarTransacao();

        try {
            cn.executeConsulta(sql);
            while (cn.rs.next()) {

                lista.addRow(new String[]{
                    cn.rs.getString("id"),
                    df.format(cn.rs.getDouble("valor")),
                    cn.rs.getString("estab_debito"),
                    cn.rs.getString("complemento")
                });

                valor += cn.rs.getDouble("valor");
            }

            if (jTable1.getRowCount() > 0
                    && jCheckBox1.isSelected()) {

                jBtnGravar2.setEnabled(false);
                jBtnEstornar.setEnabled(true);

            } else if (jTable1.getRowCount() > 0) {

                jBtnGravar2.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(this, "NÃ£o hÃ¡ lanÃ§amentos para integraÃ§Ã£o.");
            }

        } catch (SQLException ex) {
            throw new RuntimeException("NÃ£o foi possÃ­vel encontrar os lanÃ§amentos.");
        }
        cn.finalizarTransacao();

        jTxtValor.setText(df.format(valor));

    }
}
