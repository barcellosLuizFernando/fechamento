/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelaCadastros;

import conn.ConexaoFB;
import conn.ConexaoMySQL;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author luiz.barcellos
 */
public class AjustaCadastros extends javax.swing.JInternalFrame {

    private ConexaoMySQL cn;

    private ConexaoFB cnfb = new ConexaoFB();

    String unidades = "0";
    String depositos = "0";

    /**
     * Creates new form AjustaCadastros
     */
    public AjustaCadastros(ConexaoMySQL conn) {
        initComponents();
        this.cn = conn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTxtContUnidades = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTxtContDepositos = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Ajusta cadastros");

        jLabel1.setText("CADASTROS INCOMPLETOS");

        jLabel3.setText("Unidades");

        jTxtContUnidades.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtContUnidades.setEnabled(false);

        jLabel4.setText("Depósitos");

        jTxtContDepositos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtContDepositos.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 220, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtContUnidades)
                            .addComponent(jTxtContDepositos))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtContUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtContDepositos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Ajustar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(147, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            pesquisaCadastros();
            importaCadastros();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTxtContDepositos;
    private javax.swing.JTextField jTxtContUnidades;
    // End of variables declaration//GEN-END:variables

    private void pesquisaCadastros() {
        String sql;
        
        depositos = "0";
        unidades = "0";
        

        char letra = ',';
        char[] palavra;
        int cont = 0;

        

        cn.iniciarTransacao();

        //CONSULTA UNIDADES
        try {

            sql = "SELECT DISTINCT unidade FROM quebra_tecnica "
                    + "WHERE unidade NOT IN (SELECT id FROM cad_estabelecimentos);";
            cn.executeConsulta(sql);
            while (cn.rs.next()) {
                unidades += "," + cn.rs.getString("unidade");
            }
            cn.rs.close();

            palavra = unidades.toCharArray();

            for (int i = 0; i < palavra.length; i++) {
                if (palavra[i] == letra) {
                    cont++;
                }
            }

            jTxtContUnidades.setText("" + cont);

        } catch (Exception e) {
            throw new RuntimeException("Não foi possível consultar as unidades: " + e);
        }

        //CONSULTA DEPÓSITOS
        try {

            sql = "SELECT DISTINCT deposito FROM quebra_tecnica "
                    + "WHERE deposito NOT IN (SELECT id FROM cad_depositos);";
            cn.executeConsulta(sql);
            while (cn.rs.next()) {
                depositos += "," + cn.rs.getString("deposito");
            }
            cn.rs.close();

            palavra = depositos.toCharArray();

            for (int i = 0; i < palavra.length; i++) {
                if (palavra[i] == letra) {
                    cont++;
                }
            }

            jTxtContDepositos.setText("" + cont);

        } catch (Exception e) {
            throw new RuntimeException("Não foi possível consultar os depósitos: " + e);
        }

        cn.finalizarTransacao();
    }

    private void importaCadastros() {
        String sql;
        String sqlmy;

        int resultado = 0;

        String id = null;
        String descricao = null;
        String empresa = null;
        String aux1 = null;

        
        

        cnfb.conecta();
        cn.iniciarTransacao();

        //INSERE CADASTRO ESTABELECIMENTOS
        try {
            sql = "SELECT * FROM cad_estabelecimentos "
                    + "WHERE empresa = 1 and codigo IN (" + unidades + ");";

            cnfb.executeConsulta(sql);

            while (cnfb.rs.next()) {
                id = cnfb.rs.getString("codigo");
                empresa = cnfb.rs.getString("empresa");
                descricao = cnfb.rs.getString("nome");

                sqlmy = "INSERT INTO cad_estabelecimentos (id,descricao,id_empresa) "
                        + "VALUES ('" + id + "','" + descricao + "','" + empresa + "');";

                if (id != null
                        && descricao != null
                        && empresa != null) {

                    cn.executeAtualizacao(sqlmy);

                }

            }
            
            cnfb.rs.close();

        } catch (Exception e) {
            resultado = 1;
            throw new RuntimeException("Não foi possível gravar os dados de estabelecimentos: " + e);
        }

        //INSERE CADASTRO DEPÓSITOS
        try {
            sql = "SELECT * FROM cad_depositos "
                    + "WHERE empresa = 1 and codigo IN (" + depositos + ");";
            
            cnfb.executeConsulta(sql);

            while (cnfb.rs.next()) {
                id = cnfb.rs.getString("codigo");
                empresa = cnfb.rs.getString("empresa");
                descricao = cnfb.rs.getString("nome");
                aux1 = cnfb.rs.getString("estabelec");

                sqlmy = "INSERT INTO cad_depositos (id,id_estabelecimento,descricao,id_empresa) "
                        + "VALUES ('" + id + "','" + aux1 + "','" + descricao + "','" + empresa + "');";
                if (id != null
                        && aux1 != null
                        && descricao != null
                        && empresa != null) {

                    cn.executeAtualizacao(sqlmy);

                }
            }

        } catch (Exception e) {
            resultado = 1;
            throw new RuntimeException("Não foi possível gravar os dados de depósitos: " + e);
        }

        switch (resultado) {
            case 1:
                JOptionPane.showMessageDialog(this, "Os dados não foram atualizados.");
                break;
            default:
                JOptionPane.showMessageDialog(this, "Cadastros atualizados com sucesso.");
                break;
        }

        cn.finalizarTransacao();
        cnfb.desconecta();
    }
}
